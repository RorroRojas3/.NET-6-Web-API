<?xml version="1.0"?>
<doc>
    <assembly>
        <name>net-core-api-boiler-plate</name>
    </assembly>
    <members>
        <member name="T:net_core_api_boiler_plate.Controllers.V1.TestController">
            <summary>
                TestController
            </summary>
        </member>
        <member name="F:net_core_api_boiler_plate.Controllers.V1.TestController._logger">
            <summary>
                Private variables
            </summary>
        </member>
        <member name="M:net_core_api_boiler_plate.Controllers.V1.TestController.#ctor(Microsoft.Extensions.Logging.ILogger{net_core_api_boiler_plate.Controllers.V1.TestController},net_core_api_boiler_plate.Services.Interface.ITestService)">
            <summary>
                TestController constructor with DI
            </summary>
            <param name="logger"></param>
            <param name="testService"></param>
        </member>
        <member name="M:net_core_api_boiler_plate.Controllers.V1.TestController.GetItems">
            <summary>
                Gets all items
            </summary>
            <returns></returns>
        </member>
        <member name="M:net_core_api_boiler_plate.Controllers.V1.TestController.GetItem(System.String)">
            <summary>
                Gets item based on Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:net_core_api_boiler_plate.Controllers.V1.TestController.PostItem(net_core_api_boiler_plate.Database.Tables.Item)">
            <summary>
                Creates item 
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:net_core_api_boiler_plate.Controllers.V1.TestController.PutItem(net_core_api_boiler_plate.Database.Tables.Item)">
            <summary>
                Updates item
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:net_core_api_boiler_plate.Controllers.V1.TestController.DeleteItem(System.String)">
            <summary>
                Deletes item based on Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:net_core_api_boiler_plate.Controllers.V1.TestController.GetFile(System.String)">
            <summary>
                Gets file based on Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:net_core_api_boiler_plate.Controllers.V1.TestController.PostFile(Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
                Creates file
            </summary>
            <param name="formFile"></param>
            <returns></returns>
        </member>
        <member name="M:net_core_api_boiler_plate.Controllers.V1.TestController.PutFile(System.String,Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
                Updates file
            </summary>
            <param name="id"></param>
            <param name="formFile"></param>
            <returns></returns>
        </member>
        <member name="M:net_core_api_boiler_plate.Controllers.V1.TestController.DeleteFile(System.String)">
            <summary>
                Deletes file based on Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:net_core_api_boiler_plate.Database.Repository.Implementation.Repository`1">
            <summary>
                Repository class which implements IRepository interface
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:net_core_api_boiler_plate.Database.Repository.Implementation.Repository`1._dbContext">
            <summary>
                Private and protected variables
            </summary>
        </member>
        <member name="M:net_core_api_boiler_plate.Database.Repository.Implementation.Repository`1.#ctor(net_core_api_boiler_plate.Database.DB.DatabaseContext)">
            <summary>
                Repository constructor with DI
            </summary>
            <param name="dbContext"></param>
        </member>
        <member name="M:net_core_api_boiler_plate.Database.Repository.Implementation.Repository`1.Add(`0)">
            <summary>
                Adds T item to DB
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:net_core_api_boiler_plate.Database.Repository.Implementation.Repository`1.Delete(System.Guid)">
            <summary>
                Deletes T item from DB based on Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:net_core_api_boiler_plate.Database.Repository.Implementation.Repository`1.Get(System.Guid)">
            <summary>
                Gets T item from DB based on Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:net_core_api_boiler_plate.Database.Repository.Implementation.Repository`1.GetAll">
            <summary>
                Gets list of T from DB
            </summary>
            <returns></returns>
        </member>
        <member name="M:net_core_api_boiler_plate.Database.Repository.Implementation.Repository`1.GetWithExpression(System.Func{`0,System.Boolean})">
            <summary>
                Gets T with LINQ expression
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:net_core_api_boiler_plate.Database.Repository.Implementation.Repository`1.GetAllWithExpression(System.Func{`0,System.Boolean})">
            <summary>
                Gets list of T with LINQ expression
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:net_core_api_boiler_plate.Database.Repository.Implementation.Repository`1.Update(`0)">
            <summary>
                Updates T on DB
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="T:net_core_api_boiler_plate.Database.Repository.Interface.IEntity">
            <summary>
                IEntity interface
            </summary>
        </member>
        <member name="P:net_core_api_boiler_plate.Database.Repository.Interface.IEntity.Id">
            <summary>
                Id
            </summary>
            <value></value>
        </member>
        <member name="T:net_core_api_boiler_plate.Database.Repository.Interface.IRepository`1">
            <summary>
                IRepository interface
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:net_core_api_boiler_plate.Database.Repository.Interface.IRepository`1.GetAll">
            <summary>
                Gets all T from DB
            </summary>
            <returns></returns>
        </member>
        <member name="M:net_core_api_boiler_plate.Database.Repository.Interface.IRepository`1.Get(System.Guid)">
            <summary>
                Gets single T based on Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:net_core_api_boiler_plate.Database.Repository.Interface.IRepository`1.GetWithExpression(System.Func{`0,System.Boolean})">
            <summary>
                Gets T with LINQ expression
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:net_core_api_boiler_plate.Database.Repository.Interface.IRepository`1.GetAllWithExpression(System.Func{`0,System.Boolean})">
            <summary>
                Gets list of T with LINQ expression
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:net_core_api_boiler_plate.Database.Repository.Interface.IRepository`1.Add(`0)">
            <summary>
                Adds T to DB
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:net_core_api_boiler_plate.Database.Repository.Interface.IRepository`1.Update(`0)">
            <summary>
                Updates T on DB
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:net_core_api_boiler_plate.Database.Repository.Interface.IRepository`1.Delete(System.Guid)">
            <summary>
                Deletes T on DB based on Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:net_core_api_boiler_plate.Database.Schemas">
            <summary>
                Static Schema class
            </summary>
        </member>
        <member name="F:net_core_api_boiler_plate.Database.Schemas.Example">
            <summary>
                Example schema
            </summary>
        </member>
        <member name="T:net_core_api_boiler_plate.Database.Tables.Item">
            <summary>
                Item table
            </summary>
        </member>
        <member name="P:net_core_api_boiler_plate.Database.Tables.Item.Id">
            <summary>
                Id
            </summary>
            <value></value>
        </member>
        <member name="P:net_core_api_boiler_plate.Database.Tables.Item.Name">
            <summary>
                Name
            </summary>
            <value></value>
        </member>
        <member name="P:net_core_api_boiler_plate.Database.Tables.Item.Value">
            <summary>
                Value
            </summary>
            <value></value>
        </member>
        <member name="T:net_core_api_boiler_plate.Extensions.Applications.SwashbuckleApplication">
            <summary>
                Static SwashbuckleApplication class
            </summary>
        </member>
        <member name="M:net_core_api_boiler_plate.Extensions.Applications.SwashbuckleApplication.AddSwashbuckleApp(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Mvc.ApiExplorer.IApiVersionDescriptionProvider)">
            <summary>
                Adds Swashbuckle application 
            </summary>
            <param name="application"></param>
            <param name="provider"></param>
        </member>
        <member name="T:net_core_api_boiler_plate.Extensions.Services.CorsService">
            <summary>
                Static CorsService class
            </summary>
        </member>
        <member name="F:net_core_api_boiler_plate.Extensions.Services.CorsService._defaultCorsPolicy">
            <summary>
                Private variables
            </summary>
        </member>
        <member name="M:net_core_api_boiler_plate.Extensions.Services.CorsService.AddCorsService(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
                Adds CORS services
            </summary>
            <param name="services"></param>
        </member>
        <member name="T:net_core_api_boiler_plate.Extensions.Services.DatabaseService">
            <summary>
                Static DatabaseService class
            </summary>
        </member>
        <member name="M:net_core_api_boiler_plate.Extensions.Services.DatabaseService.AddDatabaseService(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
                Adds database service
            </summary>
            <param name="services"></param>
            <param name="configuration"></param>
        </member>
        <member name="T:net_core_api_boiler_plate.Extensions.Services.LoggingService">
            <summary>
                Static LoggingService class
            </summary>
        </member>
        <member name="M:net_core_api_boiler_plate.Extensions.Services.LoggingService.AddLoggingService(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
                Adds Logging service
            </summary>
            <param name="services"></param>
            <param name="configuration"></param>
        </member>
        <member name="T:net_core_api_boiler_plate.Extensions.Services.SwashbuckleService">
            <summary>
                Static SwashbuckleService class
            </summary>
        </member>
        <member name="M:net_core_api_boiler_plate.Extensions.Services.SwashbuckleService.AddSwashbuckleService(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
                Service to add Swashbuckle (Swagger)
            </summary>
            <param name="services"></param>
        </member>
        <member name="T:net_core_api_boiler_plate.Extensions.Services.ConfigureSwaggerOptions">
            <summary>
                ConfigureSwaggerOptions class
            </summary>
        </member>
        <member name="F:net_core_api_boiler_plate.Extensions.Services.ConfigureSwaggerOptions.provider">
            <summary>
                Private variables
            </summary>
        </member>
        <member name="M:net_core_api_boiler_plate.Extensions.Services.ConfigureSwaggerOptions.#ctor(Microsoft.AspNetCore.Mvc.ApiExplorer.IApiVersionDescriptionProvider)">
            <summary>
                ConfigureSwaggerOptions constructor with DI
            </summary>
            <param name="provider"></param>
        </member>
        <member name="M:net_core_api_boiler_plate.Extensions.Services.ConfigureSwaggerOptions.Configure(Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenOptions)">
            <summary>
                Adds swagger documentation
            </summary>
            <param name="options"></param>
        </member>
        <member name="T:net_core_api_boiler_plate.Extensions.Services.TestControllerService">
            <summary>
                Static TestControllerService class
            </summary>
        </member>
        <member name="M:net_core_api_boiler_plate.Extensions.Services.TestControllerService.AddTestControllerService(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
                Adds service for TestController
            </summary>
            <param name="services"></param>
        </member>
        <member name="T:net_core_api_boiler_plate.Program">
            <summary>
                Program class
            </summary>
        </member>
        <member name="M:net_core_api_boiler_plate.Program.CreateHostBuilder(System.String[])">
            <summary>
                CreateHostBuilder
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="T:net_core_api_boiler_plate.Services.Implementation.TestService">
            <summary>
                TestService class with implementation of interface ITestService
            </summary>
        </member>
        <member name="F:net_core_api_boiler_plate.Services.Implementation.TestService._itemRepository">
            <summary>
                Private variables
            </summary>
        </member>
        <member name="M:net_core_api_boiler_plate.Services.Implementation.TestService.#ctor(net_core_api_boiler_plate.Database.Repository.Interface.IRepository{net_core_api_boiler_plate.Database.Tables.Item})">
            <summary>
                TestService constructor with DI
            </summary>
            <param name="itemRepository"></param>
        </member>
        <member name="M:net_core_api_boiler_plate.Services.Implementation.TestService.DeleteFile(System.Guid)">
            <summary>
                Deletes file from DB based on Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:net_core_api_boiler_plate.Services.Implementation.TestService.DeleteItem(System.Guid)">
            <summary>
                Deletes item from DB based on Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:net_core_api_boiler_plate.Services.Implementation.TestService.GetFile(System.Guid)">
            <summary>
                Gets file from DB based on Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:net_core_api_boiler_plate.Services.Implementation.TestService.GetItem(System.Guid)">
            <summary>
                Gets item from DB based on Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:net_core_api_boiler_plate.Services.Implementation.TestService.GetItems">
            <summary>
                Gets all items from DB
            </summary>
            <returns></returns>
        </member>
        <member name="M:net_core_api_boiler_plate.Services.Implementation.TestService.PostFile(Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
                Creates file on DB
            </summary>
            <param name="formFile"></param>
            <returns></returns>
        </member>
        <member name="M:net_core_api_boiler_plate.Services.Implementation.TestService.PostItem(net_core_api_boiler_plate.Database.Tables.Item)">
            <summary>
                Creates item on DB
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:net_core_api_boiler_plate.Services.Implementation.TestService.PutItem(net_core_api_boiler_plate.Database.Tables.Item)">
            <summary>
                Updates item on DB
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:net_core_api_boiler_plate.Services.Implementation.TestService.UpdateFile(System.Guid)">
            <summary>
                Updates file on DB based on Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:net_core_api_boiler_plate.Services.Interface.ITestService">
            <summary>
                ITestSerice interface
            </summary>
        </member>
        <member name="M:net_core_api_boiler_plate.Services.Interface.ITestService.GetItems">
            <summary>
                Gets all items from DB
            </summary>
            <returns></returns>
        </member>
        <member name="M:net_core_api_boiler_plate.Services.Interface.ITestService.GetItem(System.Guid)">
            <summary>
                Gets item from DB based on Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:net_core_api_boiler_plate.Services.Interface.ITestService.PostItem(net_core_api_boiler_plate.Database.Tables.Item)">
            <summary>
                Creates item on DB
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:net_core_api_boiler_plate.Services.Interface.ITestService.PutItem(net_core_api_boiler_plate.Database.Tables.Item)">
            <summary>
                Updates item on DB
            </summary>
            <param name="item1"></param>
            <returns></returns>
        </member>
        <member name="M:net_core_api_boiler_plate.Services.Interface.ITestService.DeleteItem(System.Guid)">
            <summary>
                Deletes item from DB based on Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:net_core_api_boiler_plate.Services.Interface.ITestService.GetFile(System.Guid)">
            <summary>
                Gets file from DB based on Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:net_core_api_boiler_plate.Services.Interface.ITestService.PostFile(Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
                Creates file on DB 
            </summary>
            <param name="formFile"></param>
            <returns></returns>
        </member>
        <member name="M:net_core_api_boiler_plate.Services.Interface.ITestService.DeleteFile(System.Guid)">
            <summary>
                Delets file from DB based on Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:net_core_api_boiler_plate.Services.Interface.ITestService.UpdateFile(System.Guid)">
            <summary>
                Updates file from DB based on Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:net_core_api_boiler_plate.Startup">
            <summary>
                Startup class
            </summary>
        </member>
        <member name="M:net_core_api_boiler_plate.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
                Startup constructor with DI
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="P:net_core_api_boiler_plate.Startup.Configuration">
            <summary>
                Configuration settings
            </summary>
            <value></value>
        </member>
        <member name="M:net_core_api_boiler_plate.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
                Configure services
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:net_core_api_boiler_plate.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment,Microsoft.AspNetCore.Mvc.ApiExplorer.IApiVersionDescriptionProvider,net_core_api_boiler_plate.Database.DB.DatabaseContext)">
            <summary>
                Configure
            </summary>
            <param name="app"></param>
            <param name="env"></param>
            <param name="provider"></param>
            <param name="db"></param>
        </member>
    </members>
</doc>
